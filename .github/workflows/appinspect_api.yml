name: App Inspect API

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
    analysis:
        name: Scorecards analysis
        runs-on: ubuntu-latest
        permissions:
          # Needed to upload the results to code-scanning dashboard.
          security-events: write
          actions: read
          contents: read
    
        steps:
          - name: "Checkout code"
            uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
            with:
              persist-credentials: false

          - name: "Run analysis"
            uses: ossf/scorecard-action@c8416b0b2bf627c349ca92fc8e3de51a64b005cf # v1.0.2
            with:
              results_file: results.sarif
              results_format: sarif
              # Read-only PAT token. To create it,
              # follow the steps in https://github.com/ossf/scorecard-action#pat-token-creation.
              repo_token: ${{ secrets.SCORECARD_READ_TOKEN }}
              # Publish the results to enable scorecard badges. For more details, see
              # https://github.com/ossf/scorecard-action#publishing-results.
              # For private repositories, `publish_results` will automatically be set to `false`,
              # regardless of the value entered here.
              publish_results: true

          # Upload the results as artifacts (optional).
          - name: "Upload artifact"
            uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2.3.1
            with:
              name: SARIF file
              path: results.sarif
              retention-days: 5

          # Upload the results to GitHub's code scanning dashboard.
          - name: "Upload to code-scanning"
            uses: github/codeql-action/upload-sarif@5f532563584d71fdef14ee64d17bafb34f751ce5 # v1.0.26
            with:
              sarif_file: results.sarif

    appinspect:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.x
            - uses: actions/cache@v1
              with:
                  path: node_modules
                  key: nodeModules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      nodeModules-
            - name: Update Version Number
              run: |
                old_str="X.Y.Z"
                new_str=$(echo "${GITHUB_REF#refs/*/}" | tr -d "v")
                sed -i "s/$old_str/$new_str/g" package.json
                sed -i "s/$old_str/$new_str/g" ./github_app_for_splunk/default/app.conf
                cat package.json
                cat ./github_app_for_splunk/default/app.conf
            - name: Install dependencies
              run: yarn install
              env:
                  CI: true
            - name: Build app package
              run: |
                  yarn package
                  mv dist/*.spl dist/github_app_for_splunk.spl
            - uses: actions/upload-artifact@v1
              with:
                  name: app-package
                  path: dist/github_app_for_splunk.spl
            - uses: ./.github/actions/appinspect_api
              with:
                  filePath: ./dist/github_app_for_splunk.spl
                  splunkUser: ${{ secrets.SPLUNKBASE_USER }}
                  splunkPassword: ${{ secrets.SPLUNKBASE_PASSWORD }}
                  includedTags: cloud
            - name: Release
              uses: fnkr/github-action-ghr@v1
              if: startsWith(github.ref, 'refs/tags/')
              env:
                  GHR_PATH: ./dist/github_app_for_splunk.spl
                  GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
